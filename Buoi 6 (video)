SELECT * FROM CUSTOMER;

--- LOWER, UPPER, LENGTH
SELECT email,
LOWER (email) AS lower_email,
UPPER (email) AS upper_email,
LENGTH (email) AS length_email
FROM customer
WHERE LENGTH(email) > 30;

-- CL 1
SELECT LOWER(FIRST_NAME) AS FIRST_NAME, LOWER(LAST_NAME) AS LAST_NAME
FROM CUSTOMER
WHERE LENGTH(FIRST_NAME) > 10 OR LENGTH(LAST_NAME) >10;


--- LEFT, RIGHT
SELECT FIRST_NAME,
LEFT(FIRST_NAME,1) 
FROM CUSTOMER;

-- CL 2: XUẤT 5 KÍ TỰ CUỐI CỦA MAIL
SELECT EMAIL,
RIGHT(EMAIL,5),
LEFT(RIGHT(EMAIL,4),1)
FROM CUSTOMER;

--- CONCATENATE
SELECT 
CUSTOMER_ID, FIRST_NAME, LAST_NAME,
FIRST_NAME||' '|| LAST_NAME AS FULL_NAME
FROM CUSTOMER;

-- HOẶC
SELECT 
CUSTOMER_ID, FIRST_NAME, LAST_NAME,
CONCAT(FIRST_NAME,' ', LAST_NAME) AS FULL_NAME
FROM CUSTOMER;

--CL 3: MASK KÍ TỰ (mary.smith@email.com -> mar***h@email.com)
SELECT CUSTOMER_ID, EMAIL,
LEFT(EMAIL,3),
LEFT(RIGHT(EMAIL,20),1),
LEFT(EMAIL,3) || '***' || RIGHT(EMAIL,20) AS NEW_EMAIL
FROM CUSTOMER;

--- REPLACE
SELECT EMAIL,
REPLACE(EMAIL, '.org', '.com') AS NEW_MAIL
FROM CUSTOMER;

-- EX 3
-- SELECT ROUND(AVG(SALARY) - AVG(REPLACE(SALARY, '0', '')) +1,0)
-- FROM EMPLOYEES;


---POSITION
SELECT EMAIL,
POSITION ('@' IN EMAIL) AS POS,
LEFT(EMAIL, POSITION ('@' IN EMAIL) -1)
FROM CUSTOMER;

--CL 3: MASK KÍ TỰ (mary.smith@email.com -> mar***h@email.com)
SELECT EMAIL, LENGTH(EMAIL), POSITION('@' IN EMAIL), 
LEFT(EMAIL,3) || '***' || RIGHT(EMAIL, LENGTH(EMAIL) - POSITION('@' IN EMAIL)+2)
FROM CUSTOMER;

--- SUBSTRING
SELECT FIRST_NAME, 
RIGHT(LEFT(FIRST_NAME, 4), 3),
-- OR: LEFT(RIGHT(FIRST_NAME, LENGTH(FIRST_NAME)-1), 3)
SUBSTRING(FIRST_NAME FROM 2 FOR 3)
FROM CUSTOMER;

-- CL:LẤY HỌ CỦA KH TỪ EMAIL
SELECT EMAIL, POSITION('.' IN EMAIL), POSITION('@' IN EMAIL),
SUBSTRING( EMAIL FROM POSITION('.' IN EMAIL)+1 FOR (POSITION('@' IN EMAIL) - POSITION('.' IN EMAIL) -1) ) 
FROM CUSTOMER;

--- EXTRACT()
SELECT * FROM RENTAL;

SELECT RENTAL_DATE,
EXTRACT (MONTH FROM RENTAL_DATE),
EXTRACT (YEAR FROM RENTAL_DATE),
EXTRACT (HOUR FROM RENTAL_DATE)
FROM RENTAL;

-- EX1: SỐ LƯỢNG ĐH CHO THUÊ MỖI THÁNG TRONG 2020
SELECT EXTRACT(MONTH FROM RENTAL_DATE), 
COUNT(RENTAL_ID)
FROM RENTAL
WHERE EXTRACT(YEAR FROM RENTAL_DATE) = 2020
GROUP BY EXTRACT(MONTH FROM RENTAL_DATE);

-- CL1: THANG NAO CO TONG CAO NHAT
SELECT 
EXTRACT(MONTH FROM PAYMENT_DATE) AS MONTH_OF_YEAR,
SUM(AMOUNT) AS TOTAL_AMOUNT
FROM PAYMENT
GROUP BY EXTRACT(MONTH FROM PAYMENT_DATE)
ORDER BY SUM(AMOUNT) DESC
LIMIT 10 ;

-- CL2: NGAY NAO TRONG TUAN CO TONG CAO NHAT
SELECT 
EXTRACT(DAY FROM PAYMENT_DATE) AS DAY_OF_WEEK,
SUM(AMOUNT) AS TOTAL_AMOUNT
FROM PAYMENT
GROUP BY EXTRACT(DAY FROM PAYMENT_DATE)
ORDER BY SUM(AMOUNT) DESC;

-- CL3: SO TIEN CAO NHAT 1 KHACH HANG DA TIEU TRONG 1 TUAN
SELECT CUSTOMER_ID, EXTRACT(WEEK FROM PAYMENT_DATE),
SUM(AMOUNT) AS TOTAL_AMOUNT
FROM PAYMENT
GROUP BY CUSTOMER_ID, EXTRACT(WEEK FROM PAYMENT_DATE)
ORDER BY CUSTOMER_ID ASC, SUM(AMOUNT) DESC;


--- TO CHAR
SELECT
PAYMENT_DATE,
EXTRACT (DAY FROM PAYMENT_DATE),
TO_CHAR(PAYMENT_DATE, 'DD-MM-YYYY HH:MM:SS')
FROM PAYMENT;

--- INTERVAL
SELECT 
CUSTOMER_ID, RENTAL_DATE, RETURN_DATE,
EXTRACT (DAY FROM RETURN_DATE - RENTAL_DATE)*24 + EXTRACT(HOUR FROM RETURN_DATE - RENTAL_DATE)
FROM RENTAL;

-- CL1: 
SELECT CUSTOMER_ID, RENTAL_DATE, RETURN_DATE,
RETURN_DATE - RENTAL_DATE AS RENTAL_TIME
FROM RENTAL
WHERE CUSTOMER_ID = 35;

-- CL2:
SELECT CUSTOMER_ID,
AVG(RETURN_DATE - RENTAL_DATE) AS AVG_RENTAL_TIME
FROM RENTAL
GROUP BY CUSTOMER_ID
ORDER BY AVG(RETURN_DATE - RENTAL_DATE) DESC;



