1. Trong database GreenCycles:
--- 1. CASE - WHEN
-- phân loại phim theo time
-- EX1 
SELECT  
CASE
	WHEN LENGTH < 60 THEN 'SHORT'
	WHEN LENGTH BETWEEN 60 AND 120 THEN 'MED'
	WHEN LENGTH > 120 THEN 'LONG'
END AS CATEGORY,
COUNT(*) AS so_luong
FROM FILM
GROUP BY CATEGORY;

-- EX2
SELECT  FILM_ID,
CASE
	WHEN RATING IN ('G', 'PG') THEN '1'
	ELSE '0'
END AS TAG
FROM FILM;

-- CL3
SELECT * FROM FILM;
SELECT  FILM_ID,
CASE 
	WHEN RATING IN ('PG', 'PG-13') OR LENGTH > 210 THEN 'GREAT RATING OR LONG'
	WHEN DESCRIPTION IN ('DRAMA') AND LENGTH > 90 THEN 'LONG DRAMA'
	WHEN DESCRIPTION LIKE '%DRAMA%' AND LENGTH <= 90 THEN 'SHCITY DRAMA'
	WHEN RENTAL_RATE < 1 THEN 'VERY CHEAP'
END CATEGORY
FROM FILM
WHERE CASE 
	WHEN RATING IN ('PG', 'PG-13') OR LENGTH > 210 THEN 'GREAT RATING OR LONG'
	WHEN DESCRIPTION IN ('DRAMA') AND LENGTH > 90 THEN 'LONG DRAMA'
	WHEN DESCRIPTION LIKE '%DRAMA%' AND LENGTH <= 90 THEN 'SHCITY DRAMA'
	WHEN RENTAL_RATE < 1 THEN 'VERY CHEAP'
END IS NOT NULL;

--- 2. PIVOT CASE WHEN
SELECT CUSTOMER_ID,
CASE
	WHEN AMOUNT > 10 THEN 'HIGH'
	WHEN AMOUNT BETWEEN 5 AND 10 THEN 'MED'
	ELSE 'LOW'
END AS CATEGORY,
SUM(AMOUNT)
FROM PAYMENT
GROUP BY CUSTOMER_ID, CATEGORY;

-- CHANGE TO:
SELECT CUSTOMER_ID,
SUM( CASE
	WHEN AMOUNT > 10 THEN AMOUNT
	ELSE 0
END) AS HIGH,
SUM( CASE
	WHEN AMOUNT BETWEEN 5 AND 10 THEN AMOUNT
	ELSE 0
END) AS MED,
SUM( CASE
	WHEN AMOUNT <5 THEN AMOUNT
	ELSE 0
END) AS LOW
FROM PAYMENT
GROUP BY CUSTOMER_ID;

--- CL 1:
SELECT 
CASE 
	WHEN LENGTH > 120 THEN 'LONG'
	WHEN LENGTH BETWEEN 60 AND 120 THEN 'MID'
	ELSE 'SHORT'
END AS CATEGORY,
SUM(CASE 
	WHEN RATING IN ('R') THEN 1
	ELSE 0
END) AS R,
SUM(CASE 
	WHEN RATING IN ('PG') THEN 1
	ELSE 0
END) AS PG,
SUM(CASE 
	WHEN RATING IN ('PG-13') THEN 1
	ELSE 0
END) AS PG13
FROM FILM
GROUP BY CATEGORY; 















2. Trong database demo:
--- CASE - WHEN
-- CL1:
SELECT  
CASE 
	WHEN AMOUNT < 20000 THEN 'LOW'
	WHEN AMOUNT BETWEEN 20000 AND 150000 THEN 'MED'
	ELSE 'HIGH'
END AS RANK,
COUNT(*) AS SOLUONG_VE
FROM TICKET_FLIGHTS
GROUP BY RANK;

-- CL2:
SELECT * FROM FLIGHTS;
SELECT
CASE 
	WHEN EXTRACT(MONTH FROM SCHEDULED_DEPARTURE) IN (02, 03, 04) THEN 'SPRING'
	WHEN EXTRACT(MONTH FROM SCHEDULED_DEPARTURE) IN (05, 06, 07) THEN 'SUMMER'
	WHEN EXTRACT(MONTH FROM SCHEDULED_DEPARTURE) IN (08, 09, 10) THEN 'FALL'
	ELSE 'WINTER'
END AS SEASON,
COUNT(*) AS FLIGHT_NUM
FROM FLIGHTS
GROUP BY SEASON;

--- COALESCE: SOLVE NULL
SELECT SCHEDULED_ARRIVAL, 
ACTUAL_ARRIVAL,
COALESCE(ACTUAL_ARRIVAL, '2020-01-01'),
COALESCE(ACTUAL_ARRIVAL, SCHEDULED_ARRIVAL),
COALESCE(ACTUAL_ARRIVAL - SCHEDULED_ARRIVAL, '00:00:00')
FROM FLIGHTS;

--- CAST
SELECT SCHEDULED_ARRIVAL, 
ACTUAL_ARRIVAL,
COALESCE(CAST(ACTUAL_ARRIVAL - SCHEDULED_ARRIVAL AS VARCHAR), 'NOT')
FROM FLIGHTS;

--EX 2: 
SELECT *, 
CAST(TICKET_NO AS BIGINT)
FROM TICKET_FLIGHTS;










