--------------- BUOI 10: DEMO
-- SELECT t1.*, t2.*
-- FROM table1 AS t1 INNER JOIN table2 AS t2
-- ON t1.key1 = t2.key2

-- CL1:
SELECT * FROM SEATS;
SELECT * FROM BOARDING_PASSES;

SELECT B.FARE_CONDITIONS, COUNT(A.FLIGHT_ID) AS SO_LUONG
FROM BOARDING_PASSES AS A
INNER JOIN SEATS AS B
ON A.SEAT_NO = B.SEAT_NO
GROUP BY FARE_CONDITIONS;

-- EX 2: LEFT - RIGHT JOIN: TÌM THÔNG TIN CHUYẾN BAY CỦA TỪNG MÁY BAY
-- TÌM MÁY BAY NÀO KO CÓ CHUYẾN BAY
SELECT * FROM bookings.aircrafts_data;
SELECT * FROM bookings.flights;

SELECT A.AIRCRAFT_CODE,
B.FLIGHT_ID, B.FLIGHT_NO
FROM aircrafts_data AS A
LEFT JOIN flights AS B
ON A.AIRCRAFT_CODE = B.AIRCRAFT_CODE 
WHERE B.FLIGHT_NO IS NULL;

-- CL 2:
-- TÌM GHẾ NÀO ĐƯỢC ĐẶT THƯỜNG XUYÊN NHẤT
-- CHỖ NGỒI NÀO CHƯA BAO GIỜ ĐƯỢC ĐẶT?
-- HÀNG GHẾ NÀO ĐƯỢC ĐẶT THƯỜNG XUYÊN NHẤT?

SELECT * FROM SEATS;
SELECT * FROM BOARDING_PASSES;

SELECT A.SEAT_NO, COUNT(FLIGHT_ID)
FROM SEATS AS A
LEFT JOIN BOARDING_PASSES AS B
ON A.SEAT_NO = B.SEAT_NO
GROUP BY A.SEAT_NO
ORDER BY COUNT(FLIGHT_ID) DESC;

SELECT A.SEAT_NO, B.FLIGHT_ID
FROM SEATS AS A
LEFT JOIN BOARDING_PASSES AS B
ON A.SEAT_NO = B.SEAT_NO
WHERE B.SEAT_NO IS NULL;

SELECT RIGHT(A.SEAT_NO, 1), COUNT(FLIGHT_ID)
FROM SEATS AS A
LEFT JOIN BOARDING_PASSES AS B
ON A.SEAT_NO = B.SEAT_NO
GROUP BY RIGHT(A.SEAT_NO, 1)
ORDER BY COUNT(FLIGHT_ID) DESC;


-- FULL JOIN
SELECT * FROM bookings.boarding_passes;
SELECT * FROM bookings.tickets;

SELECT *
FROM bookings.tickets AS A
FULL JOIN bookings.boarding_passes AS B
ON A.TICKET_NO = B.TICKET_NO
WHERE A.TICKET_NO IS NULL;

--- JOIN ON MULTIPLE CONDITIONS: GIÁ TRUNG BÌNH TỪNG GHẾ MÁY BAY
SELECT A.SEAT_NO, 
AVG(B.AMOUNT)
FROM bookings.boarding_passes AS A
LEFT JOIN bookings.ticket_flights AS B
ON A.TICKET_NO = B.TICKET_NO
AND B.FLIGHT_ID = B.FLIGHT_ID
GROUP BY A.SEAT_NO
ORDER BY AVG(B.AMOUNT) DESC;


--- JOIN MULTIPLE TABLE
--- SỐ VÉ, TÊN KH, GIÁ VÉ, GIỜ BAY, GIỜ KẾT THÚC

SELECT A.TICKET_NO, A.PASSENGER_NAME, B.AMOUNT, C.scheduled_departure
FROM TICKETS AS A
INNER JOIN TICKET_FLIGHTS AS B ON A.TICKET_NO = B.TICKET_NO
INNER JOIN FLIGHTS AS C ON B.FLIGHT_ID = C.FLIGHT_ID ;


--------------- BUOI 10: GREENCYCLES

--- INNER JOIN
-- SELECT t1.*, t2.*
-- FROM table1 AS t1 INNER JOIN table2 AS t2
-- ON t1.key1 = t2.key2

SELECT * FROM PAYMENT;
SELECT * FROM CUSTOMER;

SELECT * FROM PAYMENT AS A
INNER JOIN CUSTOMER AS B
ON A.CUSTOMER_ID = B.CUSTOMER_ID;

SELECT A.PAYMENT_ID, A.CUSTOMER_ID, B.FIRST_NAME, B.LAST_NAME
FROM PAYMENT AS A
INNER JOIN CUSTOMER AS B
ON A.CUSTOMER_ID = B.CUSTOMER_ID;


-- CL: JOIN MULTIPLE TABLE: FIRST_NAME, LAST_NAME, EMAIL, ĐỊA CHỈ QUỐC GIA
-- KHÁCH TỪ BRAZIL

SELECT * FROM public.customer;
SELECT * FROM public.address;
SELECT * FROM public.city;
SELECT * FROM public.country;

SELECT FIRST_NAME, LAST_NAME, EMAIL, COUNTRY
FROM customer AS A
INNER JOIN address AS B ON A.address_id = B.address_id
INNER JOIN city AS C ON  B.city_id = C.city_id
INNER JOIN country AS D ON C.country_id = D.country_id
WHERE D.COUNTRY = 'Brazil';

-- SELF JOIN

CREATE TABLE employee (
	employee_id INT,
	name VARCHAR (50),
	manager_id INT
);

INSERT INTO employee 
VALUES
	(1, 'Liam Smith', NULL),
	(2, 'Oliver Brown', 1),
	(3, 'Elijah Jones', 1),
	(4, 'William Miller', 1),
	(5, 'James Davis', 2),
	(6, 'Olivia Hernandez', 2),
	(7, 'Emma Lopez', 2),
	(8, 'Sophia Andersen', 2),
	(9, 'Mia Lee', 3),
	(10, 'Ava Robinson', 3);


SELECT EMP.employee_id, EMP.name, EMP.manager_id, MNG.name AS mng_name
FROM EMPLOYEE AS EMP
LEFT JOIN EMPLOYEE AS MNG
ON EMP.manager_id = MNG.employee_id;

-- CL: SELF JOIN
SELECT A.TITLE AS title1, B.TITLE AS title2, A.LENGTH
FROM FILM AS A
JOIN FILM AS B 
ON A.LENGTH = B.LENGTH
WHERE A.TITLE <> B.TITLE;


--- UNION
SELECT FIRST_NAME, 'ACTOR' AS SOURCE FROM ACTOR
UNION
SELECT FIRST_NAME, 'CUSTOMER' AS SOURCE FROM CUSTOMER
UNION
SELECT FIRST_NAME, 'STAFF' AS SOURCE FROM STAFF
ORDER BY SOURCE;














